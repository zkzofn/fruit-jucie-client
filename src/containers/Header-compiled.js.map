{"version":3,"sources":["Header.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEM,M;;;AACJ,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,gHACX,KADW;;AAGjB,UAAK,KAAL,GAAa;AACX,YAAM;AADK,KAAb;AAHiB;AAMlB;;;;yCAEoB;AAAA;;AACnB,WAAK,KAAL,CAAW,WAAX,GAAyB,IAAzB,CAA8B,UAAC,MAAD,EAAY;AACxC,gBAAQ,GAAR,CAAY,MAAZ;AACA,gBAAQ,GAAR,CAAY,OAAK,KAAjB;AAED,OAJD;AAKD;;;iCAEa;AACZ,WAAK,QAAL,CAAc,EAAC,MAAM,IAAP,EAAd;AACD;;;kCAEa;AACZ,WAAK,QAAL,CAAc,EAAC,MAAM,KAAP,EAAd;AACD;;;iCAEY;AACX,WAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,GAAxB;AACD;;;6BAIQ;AAAA;;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aACE;AAAA;AAAA;AACE;AACE,qBAAU,QADZ;AAEE,iBAAO;AAAA;AAAA,cAAM,WAAU,eAAhB;AAAA;AAAA,WAFT;AAGE,2BAAiB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAHnB;AAIE,oCAA0B,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AAJ5B,UADF;AASE;AAAA;AAAA;AACE,kBAAM,KAAK,KAAL,CAAW,IADnB;AAEE,oBAAQ,KAFV;AAGE,6BAAiB;AAAA,qBAAQ,OAAK,QAAL,CAAc,EAAC,UAAD,EAAd,CAAR;AAAA;AAHnB;AAKE;AAAA;AAAA,cAAU,YAAY,sBAAM;AAC1B,uBAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,SAAxB;AACA,uBAAK,WAAL;AACD,eAHD;AAIE,2EAJF;AAAA;AAAA,WALF;AAYE;AAAA;AAAA,cAAU,YAAY,sBAAM;AAC1B,uBAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,OAAxB;AACA,uBAAK,WAAL;AACD,eAHD;AAIE,uEAJF;AAAA;AAAA,WAZF;AAmBE;AAAA;AAAA;AACE,yEADF;AAAA;AAAA,WAnBF;AAwBE,kEAxBF;AAyBE;AAAA;AAAA,cAAU,MAAK,WAAf,EAA2B,YAAY,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAAvC;AAAA;AAAA,WAzBF;AA0BE;AAAA;AAAA,cAAU,UAAU,IAApB;AAAA;AAAA,WA1BF;AA2BE;AAAA;AAAA,cAAU,UAAU,IAApB;AAAA;AAAA;AA3BF,SATF;AAuCE;AAAA;AAAA,YAAK,WAAU,8BAAf;AACE,6DAAe,KAAK,KAApB,CADF;AAEE,mEAFF;AAGE;AAHF;AAvCF,OADF;AAgDD;;;;;;AAMH,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,KAAD,EAAW;AACjC,SAAO;AACL,aAAS,MAAM;AADV,GAAP;AAGD,CAJD;;AAMA,IAAM,qBAAqB,SAArB,kBAAqB,CAAC,QAAD,EAAc;AACvC,SAAO,+BAAmB;AACxB;AADwB,GAAnB,EAEJ,QAFI,CAAP;AAGD,CAJD;;kBAMe,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,MAA7C,C","file":"Header-compiled.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { AppBar, Drawer, MenuItem, Divider } from 'material-ui';\r\nimport Power from 'material-ui/svg-icons/action/power-settings-new';\r\nimport Cart from 'material-ui/svg-icons/action/shopping-cart';\r\nimport Question from 'material-ui/svg-icons/action/question-answer';\r\nimport HeaderTop from '../components/HeaderTop';\r\nimport HeaderLogo from '../components/HeaderLogo';\r\nimport HeaderNav from '../components/HeaderNav';\r\nimport { getValidate } from '../actions/RequestManager';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.getValidate().then((result) => {\r\n      console.log(result);\r\n      console.log(this.props);\r\n      \r\n    });\r\n  }\r\n\r\n  openDrawer () {\r\n    this.setState({open: true})\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.setState({open: false})\r\n  }\r\n\r\n  titleTouch() {\r\n    this.props.history.push(\"/\")\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    // const headerStyle = {\r\n    //   position: 'relative',\r\n    //   width: '100%',\r\n    //   height: 'auto',\r\n    //   backgroundColor: '#fff',\r\n    //   margin: '0 auto',\r\n    //   overflow: 'hidden'\r\n    // };\r\n    return (\r\n      <div>\r\n        <AppBar\r\n          className=\"appBar\"\r\n          title={<span className=\"cursorPointer\">Eat More</span>}\r\n          onTitleTouchTap={this.titleTouch.bind(this)}\r\n          onLeftIconButtonTouchTap={this.openDrawer.bind(this)}\r\n        >\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          open={this.state.open}\r\n          docked={false}\r\n          onRequestChange={open => this.setState({open})}\r\n        >\r\n          <MenuItem onTouchTap={() => {\r\n            this.props.history.push(\"/signin\");\r\n            this.closeDrawer();\r\n          }}>\r\n            <Power />\r\n            Sign In\r\n          </MenuItem>\r\n          <MenuItem onTouchTap={() => {\r\n            this.props.history.push(\"/cart\");\r\n            this.closeDrawer();\r\n          }}>\r\n            <Cart />\r\n            장바구니\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <Question />\r\n            문의\r\n          </MenuItem>\r\n\r\n          <Divider />\r\n          <MenuItem href=\"/products\" onTouchTap={this.closeDrawer.bind(this)}>Green</MenuItem>\r\n          <MenuItem disabled={true}>Soup</MenuItem>\r\n          <MenuItem disabled={true}>Salad</MenuItem>\r\n        </Drawer>\r\n\r\n        <div className=\"visible-over-block container\">\r\n          <HeaderTop {...this.props} />\r\n          <HeaderLogo />\r\n          <HeaderNav />\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    current: state.current\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    getValidate,\r\n  }, dispatch)\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"]}
{"version":3,"sources":["SignIn.js"],"names":[],"mappings":"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","file":"SignIn-compiled.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { TextField, RaisedButton, FlatButton, Dialog } from 'material-ui';\r\nimport { postLogin } from '../actions/RequestManager';\r\n\r\nimport crypto from 'crypto-js';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      alertOpen: false,\r\n      account: \"\",\r\n      password: \"\",\r\n      alertMessage: \"\"\r\n    }\r\n  };\r\n\r\n  handleAlertOpen = () => {\r\n    this.setState({alertOpen: true})\r\n  };\r\n\r\n  handleAlertClose = () => {\r\n    this.setState({\r\n      account: \"\",\r\n      password: \"\",\r\n      alertOpen: false\r\n    })\r\n  };\r\n\r\n  onChangeAccount = (event) => {\r\n    this.setState({account: event.target.value})\r\n  };\r\n\r\n  onChangePassword = (event) => {\r\n    this.setState({password: event.target.value})\r\n  };\r\n\r\n  onKeyEnter = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      this.submit();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  submit = () => {\r\n    if (this.state.account === \"\") {\r\n      this.refs.loginAccount.focus();\r\n    } else if (this.state.password === \"\") {\r\n      this.refs.loginPassword.focus();\r\n    } else {\r\n      // 로그인 시도\r\n      const data = {\r\n        account: this.state.account,\r\n        password: crypto.SHA1(this.state.password).toString()\r\n      };\r\n\r\n      this.props.postLogin(data).then((result) => {\r\n        if (this.props.current.user) {\r\n          this.props.history.push(\"/\");\r\n        } else {\r\n          this.setState({\r\n            alertMessage: result.payload.data.msg,\r\n            alertOpen: true\r\n          })\r\n        }\r\n        // if (result.payload.data.status === 200) {\r\n        //   this.props.history.goBack();\r\n        // } else if (result.payload.data.status === 404)\r\n        //   this.setState({\r\n        //     alertMessage: result.payload.data.msg,\r\n        //     alertOpen: true\r\n        //   })\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this);\r\n\r\n    const styles = {\r\n      signInStyle: {\r\n        width: 256,\r\n        margin: \"auto\"\r\n      },\r\n    };\r\n\r\n    const alertActions = [\r\n      <FlatButton\r\n        label=\"OK\"\r\n        primary={true}\r\n        onClick={this.handleAlertClose}\r\n      />\r\n    ];\r\n\r\n    return (\r\n      <div style={styles.signInStyle}>\r\n        <TextField\r\n          floatingLabelText=\"ID\"\r\n          value={this.state.account}\r\n          onChange={this.onChangeAccount}\r\n          onKeyPress={this.onKeyEnter}\r\n          ref=\"loginAccount\"\r\n        /><br />\r\n        <TextField\r\n          floatingLabelText=\"Password\"\r\n          type=\"password\"\r\n          value={this.state.password}\r\n          onChange={this.onChangePassword}\r\n          onKeyPress={this.onKeyEnter}\r\n          ref=\"loginPassword\"\r\n        /><br />\r\n        <RaisedButton\r\n          label=\"Sign In\"\r\n          primary={true}\r\n          onTouchTap={this.submit}\r\n          fullWidth={true}\r\n        />\r\n\r\n        <Dialog\r\n          actions={alertActions}\r\n          modal={false}\r\n          open={this.state.alertOpen}\r\n          onRequestClose={this.handleAlertClose}\r\n        >\r\n          {this.state.alertMessage}\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    current: state.current\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    postLogin,\r\n  }, dispatch)\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);"]}
{"version":3,"sources":["Cart.js"],"names":[],"mappings":"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","file":"Cart-compiled.js","sourcesContent":["import React, { Component } from 'react';\r\nimport update from 'react-addons-update';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn, TableFooter } from 'material-ui/Table';\r\nimport { getCart } from '../actions/RequestManager';\r\nimport CircularProgress from './CircularProgress';\r\n\r\nclass Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cartItems: []\r\n    }\r\n  }\r\n\r\n  // 장바구니에서 구매페이지로 넘어갈 때 재고도 한번 확인하고 넘어가\r\n\r\n  componentWillMount() {\r\n    // 여기서 setTimeout을 주는 이유는 매번\r\n    setTimeout(() => {\r\n      const params = {\r\n        userId: this.props.currentUser.id\r\n      };\r\n\r\n      this.props.getCart(params)\r\n        .then(res => {\r\n          const { cart } = res.payload.data;\r\n\r\n          console.log(cart);\r\n\r\n          this.setState({cart});\r\n        });\r\n    }, 200);\r\n\r\n\r\n\r\n\r\n    this.setState({\r\n      cartItems: [\r\n        {id: 1, title: \"짤깃한 고구마\", options: [\"짤깃한맛\", \"고소한맛\"], price: 5800, count: 5},\r\n        {id: 2, title: \"짤깃한 고구마\", options: [\"매운맛\", \"고소한맛\"], price: 5800, count: 5},\r\n        {id: 3, title: \"짤깃한 고구마\", options: [\"단맛\"], price: 5800, count: 15},\r\n      ]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.cart === undefined)\r\n      return <CircularProgress />;\r\n\r\n\r\n    const styles = {\r\n      id: {width: \"10%\", textAlign: \"center\"},\r\n      titleHeader: {width: \"54%\", textAlign: \"center\"},\r\n      title: {width: \"54%\"},\r\n      count: {width: \"11%\", textAlign: \"center\"},\r\n      price: {width: \"12%\", textAlign: \"center\"},\r\n      totalPrice: {width: \"12%\", textAlign: \"center\"},\r\n    };\r\n\r\n\r\n\r\n    const renderOptions = (options) => {\r\n      return options.map((option, index) => {\r\n        return (\r\n          <p key={index}>{option}</p>\r\n        )\r\n      })\r\n    };\r\n\r\n    const minusProductCount = (event, index) => {\r\n      event.stopPropagation();\r\n\r\n      this.setState({\r\n        cartItems: update(\r\n          this.state.cartItems, {\r\n            [index]: {\r\n              count: {\r\n                $set: this.state.cartItems[index].count > 1 ? this.state.cartItems[index].count - 1 : 1\r\n              }\r\n            }\r\n          }\r\n        )\r\n      })\r\n    };\r\n\r\n\r\n    const plusProductCount = (event, index) => {\r\n      event.stopPropagation();\r\n\r\n      this.setState({\r\n        cartItems: update(\r\n          this.state.cartItems, {\r\n            [index]: {\r\n              count: {\r\n                $set: this.state.cartItems[index].count + 1\r\n              }\r\n            }\r\n          }\r\n        )\r\n      })\r\n    };\r\n\r\n    const calcTotalPrice = () => {\r\n      let totalPrice = 0;\r\n\r\n      for (let i = 0; i < this.state.cartItems.length; i++) {\r\n        totalPrice += this.state.cartItems[i].price * this.state.cartItems[i].count;\r\n      }\r\n\r\n      return totalPrice.toLocaleString();\r\n    };\r\n\r\n    const renderCartListOver = () => {\r\n      return this.state.cartItems.map((cartItem, index) => {\r\n        return (\r\n          <TableRow key={index}>\r\n            <TableRowColumn style={styles.title}>\r\n              <img\r\n                src=\"../../assets/img/sweet_potato.jpg\"\r\n                className=\"inlineBlock alignCenter\"\r\n                style={{width: \"50%\"}}\r\n              />\r\n              <div style={{width: \"50%\", verticalAlign: \"middle\"}} className=\"inlineBlock\">\r\n                <h4>{cartItem.title}</h4>\r\n                {renderOptions(cartItem.options)}\r\n              </div>\r\n            </TableRowColumn>\r\n            <TableRowColumn style={styles.count}>\r\n              <div className=\"boxed-group\" role=\"group\" aria-label=\"Product count\" style={{height: 30}}>\r\n                <div\r\n                  style={{width: \"33.3333333%\", verticalAlign: \"middle\"}}\r\n                  className=\"inlineBlock cursorPointer\"\r\n                  onClick={(event) => minusProductCount(event, index)}\r\n                >-</div>\r\n                <div style={{width: \"33.3333333%\", verticalAlign: \"middle\", height: \"100%\", paddingTop: 4}} className=\"inlineBlock productCount\">{cartItem.count}</div>\r\n                <div\r\n                  style={{width: \"33.3333333%\", verticalAlign: \"middle\"}}\r\n                  className=\"inlineBlock cursorPointer\"\r\n                  onClick={(event) => plusProductCount(event, index)}\r\n                >+</div>\r\n              </div>\r\n            </TableRowColumn>\r\n            <TableRowColumn style={styles.price}>{cartItem.price.toLocaleString()}원</TableRowColumn>\r\n            <TableRowColumn style={styles.totalPrice}>{(cartItem.count * cartItem.price).toLocaleString()}원</TableRowColumn>\r\n          </TableRow>\r\n        )\r\n      })\r\n    };\r\n\r\n    const renderCartListUnder = () => {\r\n      return this.state.cartItems.map((cartItem, index) => {\r\n        return (\r\n          <TableRow key={index}>\r\n            <TableRowColumn style={{width: \"70%\"}}>\r\n              <img\r\n                src=\"../../assets/img/sweet_potato.jpg\"\r\n                className=\"inlineBlock alignCenter\"\r\n                style={{width: \"50%\"}}\r\n              />\r\n              <div style={{width: \"50%\", verticalAlign: \"middle\"}} className=\"inlineBlock\">\r\n                <div style={{width: \"60%\"}} className=\"inlineBlock\">\r\n                  <h4>{cartItem.title}</h4>\r\n                  {renderOptions(cartItem.options)}\r\n                  <div className=\"boxed-group alignCenter\" role=\"group\" aria-label=\"Product count\" style={{width: \"70%\", height: 30}}>\r\n                    <div\r\n                      style={{width: \"33.3333333%\"}}\r\n                      className=\"inlineBlock cursorPointer\"\r\n                      onClick={(event) => minusProductCount(event, index)}\r\n                    >-</div>\r\n                    <div style={{width: \"33.3333333%\", height: \"100%\", paddingTop: 4}} className=\"inlineBlock productCount\">{cartItem.count}</div>\r\n                    <div\r\n                      style={{width: \"33.3333333%\"}}\r\n                      className=\"inlineBlock cursorPointer\"\r\n                      onClick={(event) => plusProductCount(event, index)}\r\n                    >+</div>\r\n                  </div>\r\n                  <div>\r\n                    개당 판매가 {cartItem.price.toLocaleString()}원\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </TableRowColumn>\r\n            <TableRowColumn style={{width: \"30%\"}}>\r\n              <div>\r\n                <h3>{(cartItem.count * cartItem.price).toLocaleString()}원</h3>\r\n              </div>\r\n            </TableRowColumn>\r\n          </TableRow>\r\n        )\r\n      })\r\n    };\r\n\r\n\r\n    const renderFooter = () => {\r\n      return (\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TableRowColumn>\r\n              <div className=\"pull-right pb-2\"><h3>총 삼품 금액 = {calcTotalPrice()}원</h3></div>\r\n            </TableRowColumn>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableRowColumn>\r\n              <div className=\"pull-right\">\r\n                <button className=\"btn mr-2\">선택상품삭제</button>\r\n                <button className=\"btn mr-2\">선택상품주문</button>\r\n                <button className=\"btn btn-primary\">전체상품주문</button>\r\n              </div>\r\n            </TableRowColumn>\r\n          </TableRow>\r\n        </TableFooter>\r\n      )\r\n    };\r\n\r\n    // 여기 큰화면이랑 작은화면일때 코드 분할시켜놔\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"jumbotron alignCenter\">\r\n          <h1>장바구니</h1>\r\n          <p>주문하실 상품명 및 수량을 정확하게 확인해 주세요.</p>\r\n          <p>장바구니에 담은 상품은 일주일 후 자동 삭제됩니다.</p>\r\n        </div>\r\n        \r\n        <div className=\"container pb-4\">\r\n          <div className=\"visible-over-block\">\r\n            <Table selectable={true} multiSelectable={true} allRowsSelected={true}>\r\n              <TableHeader enableSelectAll={true}>\r\n                <TableRow>\r\n                  <TableHeaderColumn style={styles.titleHeader}>상품정보</TableHeaderColumn>\r\n                  <TableHeaderColumn style={styles.count}>수량</TableHeaderColumn>\r\n                  <TableHeaderColumn style={styles.price}>판매가</TableHeaderColumn>\r\n                  <TableHeaderColumn style={styles.totalPrice}>금액</TableHeaderColumn>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody showRowHover={true}>\r\n                {renderCartListOver()}\r\n              </TableBody>\r\n              {renderFooter()}\r\n            </Table>\r\n          </div>\r\n\r\n\r\n          <div className=\"visible-under-flex\">\r\n            <Table selectable={true} multiSelectable={true} allRowsSelected={true}>\r\n              <TableHeader enableSelectAll={true}>\r\n                <TableRow>\r\n                  <TableHeaderColumn className=\"alignCenter\">상품정보</TableHeaderColumn>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {renderCartListUnder()}\r\n              </TableBody>\r\n              {renderFooter()}\r\n            </Table>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n   )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.currentUser.single\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n    getCart,\r\n  }, dispatch)\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n\r\n\r\n"]}